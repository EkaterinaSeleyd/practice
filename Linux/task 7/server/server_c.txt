#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <time.h>
#include <inttypes.h>
int main(){
	int sock;
	struct sockaddr_in addr;
	char buf[1024];
	int zapros;
	
	sock = socket(AF_INET, SOCK_STREAM, 0);
	if(sock < 0) {
		perror("socket");
		return 1;
	}
	addr.sin_family = AF_INET;
	addr.sin_port = htons(3425);
	addr.sin_addr.s_addr = htonl(INADDR_ANY);
	if(bind(sock, (struct sockaddr *)&addr, sizeof(addr)) < 0) {
		perror("bind");
		return 1;
	}
	listen(sock, 1);
	while(1) {
		sock = accept(listener, NULL, NULL);
		if(sock < 0) {
			perror("accept");
			return 1;
		}
		while(1) {
			bytes_read = recv(sock, buf, 1024, 0);
			if(bytes_read <= 0) {
				break;
			}
			printf("Receive message: %s\n", buf);
		}
		close(sock);
	}
	close(listener);
	
	struct sockaddr_in client_address;
	int client_address_len = 0;
	while (true) {
		char buffer[500];
		int len = recvfrom(sock, buf, sizeof(buf), 0,
		                   (struct sockaddr *)&client_address,
		                   &client_address_len);
		buf[len] = '\0';
		printf("received: '%s' from client %s\n", buffer,
		       inet_ntoa(client_address.sin_addr));
		sendto(sock, buf, len, 0, (struct sockaddr *)&client_address,
		       sizeof(client_address));
	}
	
	return 0;
}
